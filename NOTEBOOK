NOTEBOOK :
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.preprocessing import OneHotEncoder
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error
import plotly.express as px

# Load dataset
df = pd.read_csv("/content/holidify (1).csv")

display(df.head())

# Select features and target
X = df[['City', 'Best Time to visit']]
y = df['Rating']

# One-hot encode categorical variables
encoder = OneHotEncoder(drop='first', sparse_output=False)  # Changed 'sparse' to 'sparse_output'
X_encoded = encoder.fit_transform(X)

# Split dataset into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X_encoded, y, test_size=0.2, random_state=42)

# Train Linear Regression model
model = LinearRegression()
model.fit(X_train, y_train)

# Predictions
y_pred = model.predict(X_test)

# Evaluate the model
mse = mean_squared_error(y_test, y_pred)
print(f"Mean Squared Error: {mse}")

# Plot bar chart of actual vs predicted ratings
plt.figure(figsize=(10, 5))
plt.bar(range(len(y_test)), y_test, label="Actual", alpha=0.6)
plt.bar(range(len(y_pred)), y_pred, label="Predicted", alpha=0.6)
plt.xlabel("Sample Index")
plt.ylabel("Rating")
plt.title("Actual vs Predicted Ratings")
plt.legend()
plt.show()
